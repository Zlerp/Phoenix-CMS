# Scaffolding generated by Casein v5.1.1.5

module Casein
  class StuffsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Stuffs'
  		@stuffs = Stuff.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View stuff'
      @stuff = Stuff.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new stuff'
    	@stuff = Stuff.new
    end

    def create
      @stuff = Stuff.new stuff_params
    
      if @stuff.save
        flash[:notice] = 'Stuff created'
        redirect_to casein_stuffs_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new stuff'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update stuff'
      
      @stuff = Stuff.find params[:id]
    
      if @stuff.update_attributes stuff_params
        flash[:notice] = 'Stuff has been updated'
        redirect_to casein_stuffs_path
      else
        flash.now[:warning] = 'There were problems when trying to update this stuff'
        render :action => :show
      end
    end
 
    def destroy
      @stuff = Stuff.find params[:id]

      @stuff.destroy
      flash[:notice] = 'Stuff has been deleted'
      redirect_to casein_stuffs_path
    end
  
    private
      
      def stuff_params
        params.require(:stuff).permit(:title, :caption, :url, :image)
      end

  end
end