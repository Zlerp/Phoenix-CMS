# Scaffolding generated by Casein v5.1.1.5

module Casein
  class MediaController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Media'
  		@media = Media.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View media'
      @media = Media.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new media'
    	@media = Media.new
    end

    def create
      @media = Media.new media_params
    
      if @media.save
        flash[:notice] = 'Media created'
        redirect_to casein_media_index_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new media'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update media'
      
      @media = Media.find params[:id]
    
      if @media.update_attributes media_params
        flash[:notice] = 'Media has been updated'
        redirect_to casein_media_index_path
      else
        flash.now[:warning] = 'There were problems when trying to update this media'
        render :action => :show
      end
    end
 
    def destroy
      @media = Media.find params[:id]

      @media.destroy
      flash[:notice] = 'Media has been deleted'
      redirect_to casein_media_index_path
    end
  
    private
      
      def media_params
        params.require(:media).permit(:title, :caption, :url, :image)
      end

  end
end